Kernel command line: -q run priority-fifo
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  130,662,400 loops/s.
Boot complete.
Executing 'priority-fifo':
(priority-fifo) begin
(priority-fifo) 16 threads will iterate 16 times in the same order each time.
(priority-fifo) If the order varies then there is a bug.
(priority-fifo) Interrupt 0x0e (#PF Page-Fault Exception) at rip=8004209d42
Kernel PANIC at ../../threads/thread.c:272 in thread_current(): assertion `t->status == THREAD_RUNNING' failed.
Call stack: 0x80042137c7 0x8004206edd 0x800420a23c 0x8004216855 0x8004216973 0x8004210cca 0x80042089cf 0x8004208843 0x8004208c2a 0x800421688c 0x8004216973 0x8004210cca 0x80042089cf 0x8004208843 0x8004208c2a 0x800421688c 0x8004216973 0x8004210cca 0x80042089cf 0x8004208843 0x8004208c2a 0x800421688c 0x8004216973 0x8004210cca 0x80042089cf 0x8004208843 0x8004208c2a 0x800421688c 0x8004216973 0x8004210cca 0x80042089cf 0x8004208843 0x8004208c2a 0x800421688c 0x8004216973 0x8004210cca 0x80042089cf 0x8004208843 0x8004208c2a 0x800421688c 0x8004216973 0x8004210cca 0x80042089cf 0x8004208843 0x8004208c2a 0x800421688c 0x8004216973 0x8004210cca 0x80042089cf 0x8004208843 0x8004208c2a 0x80042071d1.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 26 ticks
Thread: 0 idle ticks, 26 kernel ticks, 0 user ticks
Console: 1