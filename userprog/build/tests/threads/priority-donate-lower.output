Kernel command line: -q -threads-tests -f run priority-donate-lower
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  104,755,200 loops/s.
hd0:0: detected 313 sector (156 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
Formatting file system...done.
Boot complete.
Executing 'priority-donate-lower':
(priority-donate-lower) begin
(priority-donate-lower) Main thread should have priority 41.  Actual priority: 41.
(priority-donate-lower) Lowering base priority...
(priority-donate-lower) Main thread should have priority 41.  Actual priority: 41.
(priority-donate-lower) acquire: got the lock
(priority-donate-lower) acquire: done
Kernel PANIC at ../../userprog/process.c:250 in process_exit(): executed an unreachable statement
Call stack: 0x800421879e 0x800421c315 0x80042071b3 0x800420761d.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 60 ticks
Thread: 30 idle ticks, 30 kernel ticks, 0 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 9 reads, 18 writes
Console: 1270 characters output
Key