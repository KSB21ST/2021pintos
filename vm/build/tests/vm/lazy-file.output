Kernel command line: -q -f put lazy-file put sample.txt put small.txt run lazy-file
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  117,760,000 loops/s.
hd0:0: detected 337 sector (168 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 151 sector (75 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'lazy-file' into the file system...
Putting 'sample.txt' into the file system...
Putting 'small.txt' into the file system...
Executing 'lazy-file':
(lazy-file) begin
(lazy-file) open "small.txt"
(lazy-file) sizeof small: 10017
(lazy-file) page aligned size of small: 12288
(lazy-file) mmap "small.txt"
(lazy-file) initial pages status
(lazy-file) check if page is not loaded
(lazy-file) check if page is not loaded
(lazy-file) check if page is not loaded
(lazy-file) load pages (3)
(lazy-file) load page [0]
(lazy-file) check if page is loaded
(lazy-file) check if page is not loaded
(lazy-file) check if page is not loaded
(lazy-file) load page [1]
(lazy-file) check if page is loaded
(lazy-file) check if page is loaded
(lazy-file) check if page is not loaded
(lazy-file) load page [2]
(lazy-file) check if page is loaded
(lazy-file) check if page is loaded
(lazy-file) check if page is loaded
Interrupt 0x0d (#GP General Protection Exception) at rip=80042233da
 cr2=0000000010002000 error=               0
rax cccccccccccccccc rbx 0000000010002000 rcx 0000000000000080 rdx 0000000000000001
rsp 0000008004244e90 rbp 0000008004244ed0 rsi 0000008004246718 rdi 0000000000000001
rip 00000080042233da r8 0000000000000000  r9 0000000000000000 r10 0000000000000000
r11 0000000000000212 r12 000000800421df05 r13 244ef00000008004 r14 2190170000008004
r15 244ee00000008004 rflags 00000206
es: 001b ds: 001b cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x8004218804 0x800421dc8f 0x8004209325 0x8004209743 0x800421f015 0x800421e420 0x800421de2e 0x4004d7 0x400f9f 0x400fe8 0Interrupt 0x0d (#GP General Protection Exception) at rip=800421583e
 cr2=0000000010002000 error=               0
rax 244f60ffffffff04 rbx 0000000010002000 rcx 00000080040b8000 rdx 00000000000003d4
rsp 0000008004244cd0 rbp 0000008004244ce0 rsi 000000000000b30f rdi 0000000000000000
rip 000000800421583e r8 0000008004244be8  r9 000000800421bce2 r10 0000000000000000
r11 0000000000000212 r12 000000800421df05 r13 244ef00000008004 r14 2190170000008004
r15 244ee00000008004 rflags 00000002
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC recursion at ../../userprog/exception.c:97 in kill().
Timer: 83 ticks
Thread: 41 idle ticks, 34 kernel ticks, 8 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 183 reads, 350 writes
hd1:0: 151 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 3067 characters output
Key