FAIL
Kernel panic in run: PANIC at ../../devices/disk.c:407 in select_sector(): assertion `sec_no < d->capacity' failed.
Call stack: 0x8004214500 0x80042106ce 0x800420fe24 0x800421f30f 0x800421d9e6 0x800421aa1b 0x8004219f27 0x8004219b00 0x4002dc 0x401608 0x401651
Translation of call stack:
0x0000008004214500: debug_panic (lib/kernel/debug.c:32)
0x00000080042106ce: select_sector (devices/disk.c:408)
0x000000800420fe24: disk_write (devices/disk.c:240)
0x000000800421f30f: inode_write_at (filesys/inode.c:301 (discriminator 3))
0x000000800421d9e6: file_write (filesys/file.c:115)
0x000000800421aa1b: write (userprog/syscall.c:395)
0x0000008004219f27: syscall_handler (userprog/syscall.c:135)
0x0000008004219b00: no_sti (userprog/syscall-entry.o:?)
0x00000000004002dc: (unknown)
0x0000000000401608: (unknown)
0x0000000000401651: (unknown)

This assertion commonly fails when accessing a file via an inode that
has been closed and freed.  Freeing an inode clears all its sector
indexes to 0xcccccccc, which is not a valid sector number for disks
smaller than about 1.6 TB.
