FAIL
Kernel panic in file system extraction run: PANIC at ../../devices/disk.c:407 in select_sector(): assertion `sec_no < d->capacity' failed.
Call stack: 0x80042144f2 0x80042106c0 0x800420fc69 0x800421e510 0x800421d4ec 0x800421d5bc 0x800421ba84 0x8004218836 0x800421818e 0x8004217c40 0x800420766f
Translation of call stack:
0x00000080042144f2: debug_panic (lib/kernel/debug.c:32)
0x00000080042106c0: select_sector (devices/disk.c:408)
0x000000800420fc69: disk_read (devices/disk.c:216)
0x000000800421e510: inode_read_at (filesys/inode.c:265)
0x000000800421d4ec: lookup (filesys/directory.c:97 (discriminator 1))
0x000000800421d5bc: dir_lookup (filesys/directory.c:121)
0x000000800421ba84: filesys_open (filesys/filesys.c:137)
0x0000008004218836: load (userprog/process.c:638)
0x000000800421818e: process_exec (userprog/process.c:308)
0x0000008004217c40: initd (userprog/process.c:95)
0x000000800420766f: kernel_thread (threads/thread.c:472)

This assertion commonly fails when accessing a file via an inode that
has been closed and freed.  Freeing an inode clears all its sector
indexes to 0xcccccccc, which is not a valid sector number for disks
smaller than about 1.6 TB.
