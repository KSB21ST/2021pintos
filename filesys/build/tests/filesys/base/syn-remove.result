FAIL
Kernel panic in run: PANIC at ../../devices/disk.c:407 in select_sector(): assertion `sec_no < d->capacity' failed.
Call stack: 0x8004214501 0x80042106cf 0x800420fc78 0x800421e75a 0x800421d459 0x800421a9a1 0x8004219f28 0x8004219b01 0x40027c 0x40108f 0x4010d8
Translation of call stack:
0x0000008004214501: debug_panic (lib/kernel/debug.c:32)
0x00000080042106cf: select_sector (devices/disk.c:408)
0x000000800420fc78: disk_read (devices/disk.c:216)
0x000000800421e75a: inode_write_at (filesys/inode.c:324)
0x000000800421d459: file_write (filesys/file.c:102)
0x000000800421a9a1: write (userprog/syscall.c:381)
0x0000008004219f28: syscall_handler (userprog/syscall.c:135)
0x0000008004219b01: no_sti (userprog/syscall-entry.o:?)
0x000000000040027c: (unknown)
0x000000000040108f: (unknown)
0x00000000004010d8: (unknown)

This assertion commonly fails when accessing a file via an inode that
has been closed and freed.  Freeing an inode clears all its sector
indexes to 0xcccccccc, which is not a valid sector number for disks
smaller than about 1.6 TB.
